{"version":3,"sources":["BooksAPI.js","components/Book.js","components/SearchPage.js","components/CurrentlyReading.js","components/WantToRead.js","components/Read.js","components/BooksShelf.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","books","Book","state","value","_this2","this","props","react_default","a","createElement","className","style","width","height","backgroundImage","imageLinks","thumbnail","onChange","e","handleSelect","target","disabled","title","authors","map","author","key","React","Component","SearchPage","updateQuery","_this","setState","trim","react_router_dom","to","type","placeholder","searchedBooks","components_Book","CurrentlyReading","currentlyReading","filter","WantToRead","wantToRead","Read","read","BooksShelf","components_CurrentlyReading","components_WantToRead","components_Read","BooksApp","length","BooksAPI","error","prevstate","b","x","handleSelectSearchPage","prevState","toConsumableArray","_this3","react_router","exact","path","render","components_BooksShelf","components_SearchPage","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.21958a7d.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React from 'react'\r\n\r\nclass Book extends React.Component {\r\n    state = {\r\n        value: 'none'\r\n    }\r\n\r\n    render() {\r\n        const { book } = this.props\r\n        return (\r\n            <li>\r\n                <div className=\"book\">\r\n                    <div className=\"book-top\">\r\n                        <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: book.imageLinks ? (`url(${book.imageLinks.thumbnail})`) : '' }}></div>\r\n                        <div className=\"book-shelf-changer\">\r\n                            <select\r\n                                value={book.shelf ? book.shelf : this.state.value}\r\n                                onChange={(e) => this.props.handleSelect(e.target.value, book)\r\n                                }>\r\n                                <option value=\"move\" disabled>Move to...</option>\r\n                                <option value=\"currentlyReading\">Currently Reading</option>\r\n                                <option value=\"wantToRead\">Want to Read</option>\r\n                                <option value=\"read\">Read</option>\r\n                                <option value=\"none\">None</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"book-title\">{book.title}</div>\r\n                    {book.authors ? book.authors.map(author => (\r\n                        <div key={author} className=\"book-authors\">{author}</div>\r\n                    ))\r\n                        : ''\r\n                    }\r\n                </div>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Book","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Book from './Book'\r\n\r\nclass SearchPage extends Component {\r\n    state = {\r\n        query: ''\r\n    }\r\n\r\n    updateQuery = (query) => {\r\n        this.setState({\r\n            query: query.trim()\r\n        })\r\n        this.props.search(query)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"search-books\" >\r\n                <div className=\"search-books-bar\">\r\n                    <Link className=\"close-search\" to='/'>Close</Link>\r\n                    <div className=\"search-books-input-wrapper\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Search by title or author\"\r\n                            onChange={(e) => this.updateQuery(e.target.value)}\r\n                            value={this.state.query}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"search-books-results\">\r\n                    <ol className=\"books-grid\">\r\n                        {this.props.searchedBooks.map(book => (\r\n                            <Book book={book} key={book.id} handleSelect={this.props.handleSelect} />\r\n                        ))}\r\n                    </ol>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchPage","import React from 'react'\r\nimport Book from './Book'\r\n\r\nconst CurrentlyReading = (props) => {\r\n    const currentlyReading = props.books.filter(book => book.shelf === 'currentlyReading')\r\n    return (\r\n        <div className=\"bookshelf-books\">\r\n            <ol className=\"books-grid\">\r\n                {currentlyReading.map(book => (\r\n                    <Book book={book} key={book.id} handleSelect={props.handleSelect} />\r\n                ))}\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CurrentlyReading","import React from 'react'\r\nimport Book from './Book'\r\n\r\nconst WantToRead = (props) => {\r\n    const wantToRead = props.books.filter(book => book.shelf === 'wantToRead')\r\n    return (\r\n        <div className=\"bookshelf-books\">\r\n            <ol className=\"books-grid\">\r\n                {wantToRead.map(book => (\r\n                    <Book book={book} key={book.id} handleSelect={props.handleSelect} />\r\n                ))}\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WantToRead","import React from 'react'\r\nimport Book from './Book'\r\n\r\nconst Read = (props) => {\r\n    const read = props.books.filter(book => book.shelf === 'read')\r\n    return (\r\n        <div className=\"bookshelf-books\">\r\n            <ol className=\"books-grid\">\r\n                {read.map(book => (\r\n                    <Book book={book} key={book.id} handleSelect={props.handleSelect} />\r\n                ))}\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Read","import React from 'react'\r\nimport CurrentlyReading from './CurrentlyReading'\r\nimport WantToRead from './WantToRead'\r\nimport Read from './Read'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst BooksShelf = (props) => {\r\n    const { books } = props\r\n    return (\r\n        <div className=\"list-books\">\r\n            <div className=\"list-books-title\">\r\n                <h1>MyReads</h1>\r\n            </div >\r\n            <div className=\"list-books-content\">\r\n                <div>\r\n                    <div className=\"bookshelf\">\r\n                        <h2 className=\"bookshelf-title\">Currently Reading</h2>\r\n                        <CurrentlyReading books={books} handleSelect={props.handleSelect} />\r\n                    </div>\r\n                    <div className=\"bookshelf\">\r\n                        <h2 className=\"bookshelf-title\">Want to Read</h2>\r\n                        <WantToRead books={books} handleSelect={props.handleSelect} />\r\n                    </div>\r\n                    <div className=\"bookshelf\">\r\n                        <h2 className=\"bookshelf-title\">Read</h2>\r\n                        <Read books={books} handleSelect={props.handleSelect} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"open-search\">\r\n                <Link to='/search'>Add a book</Link>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default BooksShelf","import React from 'react'\r\nimport * as BooksAPI from './BooksAPI'\r\nimport './App.css'\r\nimport SearchPage from './components/SearchPage'\r\nimport BooksShelf from './components/BooksShelf'\r\nimport { Route } from 'react-router-dom'\r\n\r\nclass BooksApp extends React.Component {\r\n  state = {\r\n    books: [],\r\n    searchedBooks: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    BooksAPI.getAll()\r\n      .then(books => {\r\n        this.setState({\r\n          books: books\r\n        })\r\n      })\r\n  }\r\n\r\n  search = (query) => {\r\n    if (query.length > 0) {\r\n      BooksAPI.search(query)\r\n        .then(books => {\r\n          if (books.error) {\r\n            this.setState({\r\n              searchedBooks: []\r\n            })\r\n          } else {\r\n            this.setState(prevstate => ({\r\n              // When books that are on the bookshelf show up on the searchpage, \r\n              // let them show the shelf they belong to\r\n              searchedBooks: books.filter(b => prevstate.books.map(x => {\r\n                if (b.id === x.id) {\r\n                  b.shelf = x.shelf\r\n                  return b\r\n                } else {\r\n                  return b\r\n                }\r\n              }))\r\n            }))\r\n          }\r\n        })\r\n    } else {\r\n      this.setState({\r\n        searchedBooks: []\r\n      })\r\n    }\r\n  }\r\n\r\n  handleSelect = (shelf, book) => {\r\n    BooksAPI.update(book.id, shelf)\r\n      .then(() => (this.setState((prevstate) => ({\r\n        books: prevstate.books.filter(b => {\r\n          if (b.id === book.id) {\r\n            return (book.shelf = shelf);\r\n          } else {\r\n            return (book);\r\n          }\r\n        })\r\n      }))))\r\n  }\r\n\r\n  // Add books from search page to bookshelf\r\n  handleSelectSearchPage = (value, book) => {\r\n    book.shelf = value\r\n    this.setState(prevState => ({\r\n      // If a book is already on the homepage and its shelf is changed on the searchpage, remove it and add incoming one\r\n      books: [...prevState.books.filter(b => b.id !== book.id), book]\r\n    }))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <Route exact path='/' render={() => (\r\n          <BooksShelf\r\n            books={this.state.books}\r\n            handleSelect={this.handleSelect}\r\n          />\r\n        )} />\r\n\r\n        <Route path='/search' render={() => (\r\n          <SearchPage\r\n            searchedBooks={this.state.searchedBooks}\r\n            search={this.search}\r\n            handleSelect={this.handleSelectSearchPage}\r\n            books={this.state.books} />\r\n        )} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BooksApp\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>,\r\n    document.getElementById('root'))\r\n"],"sourceRoot":""}